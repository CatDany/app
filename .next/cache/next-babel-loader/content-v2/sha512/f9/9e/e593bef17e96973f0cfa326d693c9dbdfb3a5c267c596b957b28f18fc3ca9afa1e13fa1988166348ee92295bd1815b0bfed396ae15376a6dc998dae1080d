{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CatDany\\\\vscode\\\\RealTimeApp\\\\app\\\\components\\\\Chart.js\",\n    _this = this;\n\nimport React, { Fragment } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar Chart = function Chart(props) {\n  var _props$prices = props.prices,\n      prices = _props$prices === void 0 ? [] : _props$prices,\n      _props$days = props.days,\n      days = _props$days === void 0 ? [] : _props$days;\n  var chartData = {\n    labels: days,\n    datasets: [{\n      label: 'Stock Price',\n      lineTension: 0,\n      backgroundColor: 'rgba(68, 204, 153, 0.05)',\n      borderColor: 'rgba(68, 204, 153, 0.9)',\n      borderWidth: 1,\n      borderJoinStyle: 'round',\n      pointRadius: 0,\n      pointBorderColor: '#fff',\n      pointBackgroundColor: 'rgba(68, 204, 153, 0.9)',\n      pointBorderWidth: 0,\n      data: prices\n    }]\n  };\n  var chartOptions = {\n    layout: {\n      padding: {\n        top: 25,\n        bottom: 75,\n        left: 75,\n        right: 75\n      }\n    },\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          display: false\n        }\n      }]\n    },\n    animation: {\n      duration: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      width: 100,\n      height: 50,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/CatDany/vscode/RealTimeApp/app/components/Chart.js"],"names":["React","Fragment","Line","Chart","props","prices","days","chartData","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","borderJoinStyle","pointRadius","pointBorderColor","pointBackgroundColor","pointBorderWidth","data","chartOptions","layout","padding","top","bottom","left","right","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","display","animation","duration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,sBAEgBA,KAFhB,CAEXC,MAFW;AAAA,MAEXA,MAFW,8BAEF,EAFE;AAAA,oBAEgBD,KAFhB,CAEEE,IAFF;AAAA,MAEEA,IAFF,4BAES,EAFT;AAInB,MAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEF,IADM;AAEdG,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,aADX;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,eAAe,EAAE,0BAHrB;AAIIC,MAAAA,WAAW,EAAE,yBAJjB;AAKIC,MAAAA,WAAW,EAAE,CALjB;AAMIC,MAAAA,eAAe,EAAE,OANrB;AAOIC,MAAAA,WAAW,EAAE,CAPjB;AAQIC,MAAAA,gBAAgB,EAAE,MARtB;AASIC,MAAAA,oBAAoB,EAAE,yBAT1B;AAUIC,MAAAA,gBAAgB,EAAE,CAVtB;AAWIC,MAAAA,IAAI,EAAEf;AAXV,KADM;AAFI,GAAlB;AAmBA,MAAMgB,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,MAAM,EAAE,EAAnB;AAAuBC,QAAAA,IAAI,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC;AAAX,KADS;AAEjBC,IAAAA,mBAAmB,EAAE,KAFJ;AAGjBC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,IAAf;AAAqBC,UAAAA,OAAO,EAAE;AAA9B;AADC,OAAD;AADH,KAHS;AAQjBC,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH;AARM,GAArB;AAaA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE5B,SAAZ;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE,EAA3C;AAA+C,MAAA,OAAO,EAAEc;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAMH,CA1CD;;KAAMlB,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Chart = props => {\r\n\r\n    const { prices = [], days = [] } = props;\r\n    \r\n    const chartData = {\r\n        labels: days,\r\n        datasets: [\r\n            {\r\n                label: 'Stock Price',\r\n                lineTension: 0,\r\n                backgroundColor: 'rgba(68, 204, 153, 0.05)',\r\n                borderColor: 'rgba(68, 204, 153, 0.9)',\r\n                borderWidth: 1,\r\n                borderJoinStyle: 'round',\r\n                pointRadius: 0,\r\n                pointBorderColor: '#fff',\r\n                pointBackgroundColor: 'rgba(68, 204, 153, 0.9)',\r\n                pointBorderWidth: 0,\r\n                data: prices\r\n            }\r\n        ]\r\n    };\r\n    \r\n    const chartOptions = {\r\n        layout: { padding: { top: 25, bottom: 75, left: 75, right: 75 } },\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n            ticks: { beginAtZero: true, display: false }\r\n            }]\r\n        },\r\n        animation: {\r\n            duration: 0\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Line data={chartData} width={100} height={50} options={chartOptions} />\r\n        </>\r\n      );\r\n    \r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}