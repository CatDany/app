{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\CatDany\\\\vscode\\\\RealTimeApp\\\\app\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* pages/index.js */\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport Poll from '../components/Poll';\nimport Stats from '../components/Stats';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      answers: {},\n      cash: 0,\n      shares: 0,\n      pricePerShare: 0\n    });\n  }\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe('poll-board');\n    this.channel.bind('new-answer', ({\n      choice,\n      count\n    }) => {\n      let {\n        answers\n      } = this.state;\n      answers = _objectSpread(_objectSpread({}, answers), {}, {\n        [choice]: count\n      });\n      this.setState({\n        answers\n      });\n    });\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/load').then(response => {\n        const cash = response.data.cash;\n        const shares = response.data.shares;\n        const pricePerShare = response.data.pricePerShare;\n        this.setState({\n          cash,\n          shares,\n          pricePerShare\n        });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    const question = `Which is the largest continent in the world by population?`;\n    const choices = ['Africa', 'Asia', 'Europe', 'North America', 'South America'];\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      pageTitle: \"Realtime Data Visualization\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container-fluid position-absolute h-100 bg-light\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row position-absolute w-100 h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"col-md-7 d-flex flex-row flex-wrap align-items-center align-content-center px-5 border-right border-gray\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-5 mx-5\",\n              children: /*#__PURE__*/_jsxDEV(Poll, {\n                question: question,\n                choices: choices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"col-md-5 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\",\n            children: /*#__PURE__*/_jsxDEV(Stats, {\n              choices: choices,\n              stats: this.state.answers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/* pages/index.js */\n\n\nexport default (() => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(IndexPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n    id: \"2754035619\",\n    children: \".custom-control-label{background:transparent;color:#999;font-size:2rem;font-weight:500;cursor:pointer;line-height:2.25rem;}.custom-control-label:before,.custom-control-label:after{top:0;left:-10px;height:2.25rem;width:2.25rem;cursor:pointer;box-shadow:none !important;}.custom-control-label.checked{color:#007bff !important;}button.btn{-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:1rem;font-weight:600;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2F0RGFueVxcdnNjb2RlXFxSZWFsVGltZUFwcFxcYXBwXFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEV1QixBQUlnQyxBQVNqQixBQVNtQixBQUlOLE1BWlIsV0FDSSxNQVZKLEVBa0JiLE9BUGdCLEVBVkMsWUFXQSxHQVZDLFlBV1csSUFWWixlQUNLLFFBVXRCLEtBUWlCLE9BakJqQixRQWtCa0IsZ0JBQ2xCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQ2F0RGFueVxcdnNjb2RlXFxSZWFsVGltZUFwcFxcYXBwXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBwYWdlcy9pbmRleC5qcyAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgUHVzaGVyIGZyb20gJ3B1c2hlci1qcyc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBQb2xsIGZyb20gJy4uL2NvbXBvbmVudHMvUG9sbCc7XG5pbXBvcnQgU3RhdHMgZnJvbSAnLi4vY29tcG9uZW50cy9TdGF0cyc7XG5cbmNsYXNzIEluZGV4UGFnZSBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgc3RhdGUgPSB7IGFuc3dlcnM6IHt9LCBjYXNoOiAwLCBzaGFyZXM6IDAsIHByaWNlUGVyU2hhcmU6IDAgfVxuICAgICAgXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICBcbiAgICB0aGlzLnB1c2hlciA9IG5ldyBQdXNoZXIocHJvY2Vzcy5lbnYuUFVTSEVSX0FQUF9LRVksIHtcbiAgICAgIGNsdXN0ZXI6IHByb2Nlc3MuZW52LlBVU0hFUl9BUFBfQ0xVU1RFUixcbiAgICAgIGVuY3J5cHRlZDogdHJ1ZVxuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuY2hhbm5lbCA9IHRoaXMucHVzaGVyLnN1YnNjcmliZSgncG9sbC1ib2FyZCcpO1xuICAgIFxuICAgIHRoaXMuY2hhbm5lbC5iaW5kKCduZXctYW5zd2VyJywgKHsgY2hvaWNlLCBjb3VudCB9KSA9PiB7XG4gICAgICBsZXQgeyBhbnN3ZXJzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgYW5zd2VycyA9IHsgLi4uYW5zd2VycywgW2Nob2ljZV06IGNvdW50IH07XG4gICAgICB0aGlzLnNldFN0YXRlKHsgYW5zd2VycyB9KTtcbiAgICB9KTtcbiAgICBcbiAgICB0aGlzLnB1c2hlci5jb25uZWN0aW9uLmJpbmQoJ2Nvbm5lY3RlZCcsICgpID0+IHtcbiAgICAgIGF4aW9zLnBvc3QoJy9sb2FkJylcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIGNvbnN0IGNhc2ggPSByZXNwb25zZS5kYXRhLmNhc2g7XG4gICAgICAgICAgY29uc3Qgc2hhcmVzID0gcmVzcG9uc2UuZGF0YS5zaGFyZXM7XG4gICAgICAgICAgY29uc3QgcHJpY2VQZXJTaGFyZSA9IHJlc3BvbnNlLmRhdGEucHJpY2VQZXJTaGFyZTtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgY2FzaCwgc2hhcmVzLCBwcmljZVBlclNoYXJlIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgfVxuICBcbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5wdXNoZXIuZGlzY29ubmVjdCgpO1xuICB9XG4gIFxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgcXVlc3Rpb24gPSBgV2hpY2ggaXMgdGhlIGxhcmdlc3QgY29udGluZW50IGluIHRoZSB3b3JsZCBieSBwb3B1bGF0aW9uP2A7XG4gICAgY29uc3QgY2hvaWNlcyA9IFsnQWZyaWNhJywgJ0FzaWEnLCAnRXVyb3BlJywgJ05vcnRoIEFtZXJpY2EnLCAnU291dGggQW1lcmljYSddO1xuICAgIFxuICAgIHJldHVybiAoXG4gICAgICA8TGF5b3V0IHBhZ2VUaXRsZT1cIlJlYWx0aW1lIERhdGEgVmlzdWFsaXphdGlvblwiPlxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJjb250YWluZXItZmx1aWQgcG9zaXRpb24tYWJzb2x1dGUgaC0xMDAgYmctbGlnaHRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBwb3NpdGlvbi1hYnNvbHV0ZSB3LTEwMCBoLTEwMFwiPlxuICAgICAgICAgIFxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY29sLW1kLTcgZC1mbGV4IGZsZXgtcm93IGZsZXgtd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgYWxpZ24tY29udGVudC1jZW50ZXIgcHgtNSBib3JkZXItcmlnaHQgYm9yZGVyLWdyYXlcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJweC01IG14LTVcIj5cbiAgICAgICAgICAgICAgICA8UG9sbCBxdWVzdGlvbj17cXVlc3Rpb259IGNob2ljZXM9e2Nob2ljZXN9IC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJjb2wtbWQtNSBwb3NpdGlvbi1yZWxhdGl2ZSBkLWZsZXggZmxleC13cmFwIGgtMTAwIGFsaWduLWl0ZW1zLXN0YXJ0IGFsaWduLWNvbnRlbnQtYmV0d2VlbiBiZy13aGl0ZSBweC0wXCI+XG4gICAgICAgICAgICAgIDxTdGF0cyBjaG9pY2VzPXtjaG9pY2VzfSBzdGF0cz17dGhpcy5zdGF0ZS5hbnN3ZXJzfSAvPlxuICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbWFpbj5cbiAgICAgIDwvTGF5b3V0PlxuICAgICk7XG4gIH1cbiAgXG59XG5cbi8qIHBhZ2VzL2luZGV4LmpzICovXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IChcbiAgPEZyYWdtZW50PlxuICAgIDxJbmRleFBhZ2UgLz5cbiAgICA8c3R5bGUgZ2xvYmFsIGpzeD57YFxuICAgIFxuICAgICAgLmN1c3RvbS1jb250cm9sLWxhYmVsIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIuMjVyZW07XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5jdXN0b20tY29udHJvbC1sYWJlbDpiZWZvcmUsIC5jdXN0b20tY29udHJvbC1sYWJlbDphZnRlciB7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogLTEwcHg7XG4gICAgICAgIGhlaWdodDogMi4yNXJlbTtcbiAgICAgICAgd2lkdGg6IDIuMjVyZW07XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgICAgXG4gICAgICAuY3VzdG9tLWNvbnRyb2wtbGFiZWwuY2hlY2tlZCB7XG4gICAgICAgIGNvbG9yOiAjMDA3YmZmICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGJ1dHRvbi5idG4ge1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB9XG4gICAgICBcbiAgICBgfTwvc3R5bGU+XG4gIDwvRnJhZ21lbnQ+XG4pOyJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\CatDany\\\\\\\\vscode\\\\\\\\RealTimeApp\\\\\\\\app\\\\\\\\pages\\\\\\\\index.js */\"\n  }, void 0, false, void 0, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/Users/CatDany/vscode/RealTimeApp/app/pages/index.js"],"names":["React","Component","Fragment","axios","Pusher","Layout","Poll","Stats","IndexPage","answers","cash","shares","pricePerShare","componentDidMount","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","choice","count","state","setState","connection","post","then","response","data","componentWillUnmount","disconnect","render","question","choices"],"mappings":"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","sourcesContent":["/* pages/index.js */\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport Poll from '../components/Poll';\nimport Stats from '../components/Stats';\n\nclass IndexPage extends Component {\n\n  state = { answers: {}, cash: 0, shares: 0, pricePerShare: 0 }\n      \n  componentDidMount() {\n  \n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    \n    this.channel = this.pusher.subscribe('poll-board');\n    \n    this.channel.bind('new-answer', ({ choice, count }) => {\n      let { answers } = this.state;\n      answers = { ...answers, [choice]: count };\n      this.setState({ answers });\n    });\n    \n    this.pusher.connection.bind('connected', () => {\n      axios.post('/load')\n        .then(response => {\n          const cash = response.data.cash;\n          const shares = response.data.shares;\n          const pricePerShare = response.data.pricePerShare;\n          this.setState({ cash, shares, pricePerShare });\n        });\n    });\n    \n  }\n  \n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n  \n  render() {\n    const question = `Which is the largest continent in the world by population?`;\n    const choices = ['Africa', 'Asia', 'Europe', 'North America', 'South America'];\n    \n    return (\n      <Layout pageTitle=\"Realtime Data Visualization\">\n        <main className=\"container-fluid position-absolute h-100 bg-light\">\n          <div className=\"row position-absolute w-100 h-100\">\n          \n            <section className=\"col-md-7 d-flex flex-row flex-wrap align-items-center align-content-center px-5 border-right border-gray\">\n              <div className=\"px-5 mx-5\">\n                <Poll question={question} choices={choices} />\n              </div>\n            </section>\n            \n            <section className=\"col-md-5 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n              <Stats choices={choices} stats={this.state.answers} />\n            </section>\n            \n          </div>\n        </main>\n      </Layout>\n    );\n  }\n  \n}\n\n/* pages/index.js */\n\nexport default () => (\n  <Fragment>\n    <IndexPage />\n    <style global jsx>{`\n    \n      .custom-control-label {\n        background: transparent;\n        color: #999;\n        font-size: 2rem;\n        font-weight: 500;\n        cursor: pointer;\n        line-height: 2.25rem;\n      }\n      \n      .custom-control-label:before, .custom-control-label:after {\n        top: 0;\n        left: -10px;\n        height: 2.25rem;\n        width: 2.25rem;\n        cursor: pointer;\n        box-shadow: none !important;\n      }\n      \n      .custom-control-label.checked {\n        color: #007bff !important;\n      }\n      \n      button.btn {\n        letter-spacing: 1px;\n        font-size: 1rem;\n        font-weight: 600;\n      }\n      \n    `}</style>\n  </Fragment>\n);"]},"metadata":{},"sourceType":"module"}